"use strict";

(function ($) {
  var $win = $(window);
  var $body = $('html,body');
  var $main = $('main');
  var windowHeight = $win.height();
  var headerHeight = $('header').outerHeight(true);
  var $navigation = $('.navigation');
  var $gotop = $('#gotop');
  var $timelineItem;
  var $nav;
  $main.css({
    paddingTop: headerHeight
  });

  var fetchData = function fetchData() {
    $.ajax({
      url: 'data.json',
      method: 'get',
      dataType: 'json',
      data: {},
      success: function success(data) {
        data = data || {};
        var $timeline = $('.timeline').append($(createTimeline(data)));
        $nav = $('.navigation').append(createTimelineYearNav(data));
        $timelineItem = $timeline.find('.timeline__item');
        winScorll();
        onYear();
      }
    });
  };

  var winScorll = function winScorll() {
    $win.on('scroll', function () {
      var $this = $(this);
      var scrollTop = $this.scrollTop();
      var totalHeight = $('main').offset().top + $('main').outerHeight(true) - windowHeight;
      var idx = 0;
      $timelineItem.map(function (i, e) {
        if (scrollTop > $(e).offset().top - 200) {
          idx = i;
        } else if (scrollTop > $(document).height() - $win.height() - $timelineItem.eq($timelineItem.length - 1).outerHeight(true) / 2) {
          idx = $timelineItem.length - 1;
        }
      });
      $nav.find('li').eq(idx).addClass('navigation__item--active').siblings().removeClass('navigation__item--active');
      $('.loadbar').css({
        width: scrollTop / totalHeight * 100 + '%'
      });
      $('.timeline__item .timeline__item-content').not('.on').map(function () {
        if (windowHeight + $win.scrollTop() > $(this).offset().top) {
          $(this).addClass('on');
        }
      });

      if (scrollTop >= headerHeight) {
        $gotop.css({
          opacity: 1
        });
      } else {
        $gotop.css({
          opacity: 0
        });
      }
    }).scroll();
  };

  var onYear = function onYear() {
    $nav.on('click', 'li', function () {
      var $this = $(this);
      var idx = $(this).index();
      $body.stop().animate({
        scrollTop: idx === 0 ? 0 : $timelineItem.eq(idx).offset().top - (60 + headerHeight)
      });
    });
  };

  var createTimelineYearNav = function createTimelineYearNav(list) {
    return "<ul>" + list.map(function (e) {
      return "<li class=\"navigation__item\">".concat(e.year, "</li>");
    }).join('') + "</ul>";
  };

  var createTimeline = function createTimeline(list) {
    return list.map(function (e) {
      return "\n        <div class=\"timeline__item\">\n          <p class=\"timeline__item-year\">".concat(e.year, "</p>\n          ").concat(createTimelineItem(e.portfolio), "\n        </div>\n      ");
    }).join('');
  };

  var createTimelineItem = function createTimelineItem(item) {
    return item.map(function (e) {
      return "\n        <div class=\"timeline__item-content\">\n          <div class=\"card\">\n            <figure>\n            <img src=\"".concat(e.images, "\" alt=\"").concat(e.title, "\">\n            </figure>\n            <div class=\"card-summary\">\n              <div class=\"card-category\">").concat(e.device, "</div>\n              <h2>").concat(e.title, "</h2>\n              <div class=\"card-description\">").concat(e.description, "</div>\n            </div>\n            <a href=\"").concat(e.link, "\" target=\"_blank\"></a>\n          </div>\n        </div>\n        ");
    }).join('');
  };

  var flicker = {
    unicode: '!"#$%\'()*+,-./0123456789:;?@`aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ{[|}]~^_',
    getRandomInt: function getRandomInt(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    },
    randomCharacter: function randomCharacter() {
      return this.unicode[Math.floor(Math.random() * this.unicode.length)];
    },
    replaceAt: function replaceAt(text, character, index) {
      return text.substr(0, index) + character + text.substr(index + character.length);
    },
    init: function init(el, min, max, delay) {
      var str = $(el).text().trim(),
          bank = [],
          done = 1,
          newStr = $(el).text().trim();

      for (var i = 0; i < str.length; i++) {
        bank[i] = this.getRandomInt(min, max);
      }

      flicker.mix(el, str, newStr, done, bank, delay);
    },
    mix: function mix(el, str, newStr, done, bank, delay) {
      for (var i = 0; i < str.length; i++) {
        if (bank[i] != 0) {
          done = 0;

          if (str[i] != ' ') {
            newStr = this.replaceAt(newStr, this.randomCharacter(), i);
          } else {
            newStr = this.replaceAt(newStr, ' ', i);
          }

          bank[i]--;
        } else {
          newStr = this.replaceAt(newStr, str[i], i);
        }
      }

      $(el).text(newStr).fadeIn(1000);

      if (done == 0) {
        setTimeout(function () {
          flicker.mix(el, str, newStr, done, bank, delay);
        }, delay);
      }
    }
  };
  $gotop.on('click', function () {
    $body.stop().animate({
      scrollTop: 0
    }, 500, 'swing');
  });
  fetchData();
  flicker.init('h1 span', 1, 15, 50);
})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
